Logging:

window.log=function(){if(this.console){console.log(Array.prototype.slice.call(arguments));}};
jQuery.fn.log=function (msg){console.log("%s: %o", msg,this);return this;};
$(".classname").log(); //show an array of all elements with classname class

-----

я не особо вникал, но кажетс€ тут творитс€ рекурсивный ад. ¬ам повезло, что JS довольно быстрый, иначе бы вы залипли на хоть сколько нибудь большом дереве.

¬ам нужно построить массив-индекс по полю parent_id

TREE Ч исходный массив
BOOST Ч массив-индекс

1) ќдин раз пробегаетесь TREE и дл€ каждого элемента

for NODE in TREE
   BOOST[NODE.parent_id].push NODE



“еперь дочки дл€ любого узла выбираютс€ очень просто:

 BOOST[NODE.id] #=> массив вложенных



√отовое и весьма быстрое решение дл€ больших деревьев в моей репе на гитхабе:

github.com/the-teacher/the_sortable_tree/blob/master/app/assets/javascripts/render_tree_helper.js.coffee#L29

јлгоритм настолько хорош, что прекрасно работает даже на ruby. „то уже само по себе €вл€етс€ хорошим доказательством целесообразности подхода.

-----

